/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MessagesIndexRouteImport } from './routes/messages.index'
import { Route as ProjectsProjectIdRouteImport } from './routes/projects.$projectId'
import { Route as MessagesMessageIdRouteImport } from './routes/messages.$messageId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MessagesIndexRoute = MessagesIndexRouteImport.update({
  id: '/messages/',
  path: '/messages/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsProjectIdRoute = ProjectsProjectIdRouteImport.update({
  id: '/projects/$projectId',
  path: '/projects/$projectId',
  getParentRoute: () => rootRouteImport,
} as any)
const MessagesMessageIdRoute = MessagesMessageIdRouteImport.update({
  id: '/messages/$messageId',
  path: '/messages/$messageId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/messages/$messageId': typeof MessagesMessageIdRoute
  '/projects/$projectId': typeof ProjectsProjectIdRoute
  '/messages': typeof MessagesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/messages/$messageId': typeof MessagesMessageIdRoute
  '/projects/$projectId': typeof ProjectsProjectIdRoute
  '/messages': typeof MessagesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/messages/$messageId': typeof MessagesMessageIdRoute
  '/projects/$projectId': typeof ProjectsProjectIdRoute
  '/messages/': typeof MessagesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/messages/$messageId' | '/projects/$projectId' | '/messages'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/messages/$messageId' | '/projects/$projectId' | '/messages'
  id:
    | '__root__'
    | '/'
    | '/messages/$messageId'
    | '/projects/$projectId'
    | '/messages/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MessagesMessageIdRoute: typeof MessagesMessageIdRoute
  ProjectsProjectIdRoute: typeof ProjectsProjectIdRoute
  MessagesIndexRoute: typeof MessagesIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/messages/': {
      id: '/messages/'
      path: '/messages'
      fullPath: '/messages'
      preLoaderRoute: typeof MessagesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/$projectId': {
      id: '/projects/$projectId'
      path: '/projects/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof ProjectsProjectIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/messages/$messageId': {
      id: '/messages/$messageId'
      path: '/messages/$messageId'
      fullPath: '/messages/$messageId'
      preLoaderRoute: typeof MessagesMessageIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MessagesMessageIdRoute: MessagesMessageIdRoute,
  ProjectsProjectIdRoute: ProjectsProjectIdRoute,
  MessagesIndexRoute: MessagesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
