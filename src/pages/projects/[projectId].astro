---
import MessageTable from "@/components/message-table";
import ProjectEmailTable from "@/components/project-email-table";
import ProjectTags from "@/components/project-tags";
import SearchForm from "@/components/search-form";
import AppLayout from "@/layouts/app-layout.astro";
import MarkdownLayout from "@/layouts/markdown-layout.astro";
import RootLayout from "@/layouts/root-layout.astro";
import { actions } from "astro:actions";

const { projectId } = Astro.params;
if (!projectId) return Astro.redirect("/projects");

const pageParam = Astro.url.searchParams.get("page");
const page = pageParam ? parseInt(pageParam, 10) : 1;

const search = Astro.url.searchParams.get("search") ?? undefined;

const [project, messages] = await Promise.all([
  Astro.callAction(actions.projects.getOne.orThrow, { projectId }),
  Astro.callAction(actions.messages.getAll.orThrow, {
    projectId,
    page,
    search,
  }),
]);
---

<RootLayout>
  <AppLayout>
    <MarkdownLayout>
      <h1>{project.name}</h1>
      <ProjectTags project={project} />
      <p>{project.description}</p>
      <h2>Emails</h2>
      <section class="not-prose">
        <ProjectEmailTable projectEmails={project.emails} />
      </section>
      <header class="flex items-baseline justify-between">
        <h2>Messages</h2>
        <SearchForm search={search} url={Astro.url} />
      </header>
      <section class="not-prose">
        <MessageTable
          messages={messages.messages}
          pagination={messages.pagination}
          url={Astro.url}
        />
      </section>
    </MarkdownLayout>
  </AppLayout>
</RootLayout>
